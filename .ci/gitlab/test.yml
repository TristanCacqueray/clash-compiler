include:
  - '/.ci/gitlab/common.yml'

stages:
  - build
  - test

.test-common-local:
  extends: .common
  needs: ["build"]
  stage: test
  before_script:
    - unset SNAPCRAFT_LOGIN_FILE
    - unset HACKAGE_PASSWORD
    - export THREADS=$(./.ci/effective_cpus.sh)
    - export CABAL_JOBS=$(./.ci/effective_cpus.sh)
    - export
    - tar -xf cache.tar.zst -C / || true
    - tar -xf dist.tar.zst -C /
    - .ci/setup.sh

  tags:
    - local

.test-common:
  extends: .test-common-local
  # Run on shared runners
  tags:

# 'build' publishes its build files as an artifact. These build files are reused
# by 'prelude:doctests', 'prelude:unittests', 'lib:unittests'
# and 'suite-{verilog,vhdl}'.
build:
  extends: .common
  artifacts:
    when: always
    name: "$CI_JOB_NAME-$CI_COMMIT_SHA-$GHC_VERSION"
    paths:
      - dist.tar.zst
    expire_in: 1 day
  script:
    - .ci/build.sh

    # Archive all build files - clash-cosim generates files in its src/ directory
    - tar -cf - /root/.cabal/store $(pwd)/dist-newstyle $(pwd)/clash-cosim/src $(pwd)/.ghc* | zstd -T${THREADS} -15 > dist.tar.zst

build-clash-dev:
  extends: .test-common
  script:
    - .ci/build_clash_dev.sh

cores:unittests:
  extends: .test-common
  script:
    - cabal v2-run clash-cores:unittests

cosim:unittests:
  extends: .test-common
  script:
    - cabal v2-run clash-cosim:tests

prelude:unittests:
  extends: .test-common
  script:
    - cabal v2-run clash-prelude:unittests

lib:unittests:
  extends: .test-common
  script:
    - cabal v2-run clash-lib:unittests

# Tests run on local fast machines:
prelude:doctests:
  extends: .test-common-local
  script:
    - cabal v2-run clash-prelude:doctests

suite:vhdl:
  extends: .test-common-local
  script:
    - cabal v2-run -- clash-testsuite -j$THREADS -p .VHDL --hide-successes

suite:verilog:
  extends: .test-common-local
  script:
    - cabal v2-run -- clash-testsuite -j$THREADS -p .Verilog --hide-successes

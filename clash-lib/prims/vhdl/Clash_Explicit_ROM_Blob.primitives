[ { "BlackBox" :
    { "name" : "Clash.Explicit.ROM.Blob.romBlob#"
    , "kind" : "Declaration"
    , "type" :
"rom# :: ( KnownDomain dom        ARG[0]
         , KnownNat n    --       ARG[1]
         , KnownNat n    --       ARG[2]
         , HasCallStack) --       ARG[3]
      => Clock dom       -- clk,  ARG[4]
      -> Enable dom      -- en,   ARG[5]
      -> MemBlob n m     -- init, ARG[6]
      -> Signal dom Int  -- rd,   ARG[7]
      -> Signal dom a"
    , "template" :
"-- rom begin
~GENSYM[~COMPNAME_rom][1] : block
  signal ~GENSYM[ROM][2] : ...;
  signal ~GENSYM[rd][3]  : integer range 0 to ~LIT[1]-1;
begin
  ~SYM[2] <= ...;

  ~SYM[3] <= to_integer(~VAR[rdI][7](31 downto 0))
  -- pragma translate_off
                mod ~LIT[1]
  -- pragma translate_on
                ;
  ~GENSYM[romSync][6] : process (~ARG[4])
  begin
    if (~IF~ACTIVEEDGE[Rising][0]~THENrising_edge~ELSEfalling_edge~FI(~ARG[4])~IF ~ISACTIVEENABLE[5] ~THEN and ~ARG[5] ~ELSE ~FI) then~IF ~VIVADO ~THEN
      ~RESULT <= ~FROMBV[~SYM[2](~SYM[3])][~TYPO];~ELSE
      ~RESULT <= ~SYM[2](~SYM[3]);~FI
    end if;
  end process;
end block;
-- rom end"
    , "includes" : [ { "extension": "txt"
                     , "name": "romblob"
                     , "format": "Haskell"
                     , "templateFunction": "Clash.Primitives.ROM.romBlobTF"
                     }
                   ]
    }
  }
]
